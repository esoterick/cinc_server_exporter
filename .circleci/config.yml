version: 2.1

orbs:
  rust: circleci/rust@1.6.0
  github-cli: circleci/github-cli@2.2.0

jobs:
  release:
    docker:
      - image: ubuntu:bionic-20210930
    steps:
      - checkout
      - restore_cache:
          key: cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.lock" }}
      - run: apt update && apt install -y curl build-essential git git-man less libbsd0 libcurl3-gnutls libedit2 liberror-perl libexpat1 libssl1.0.0 libx11-6 libx11-data libxau6 libxcb1 libxdmcp6 libxext6 libxmuu1 multiarch-support openssh-client xauth
      - github-cli/install
      - run: pwd && ls -latrh && cd ./target/release/ && pwd && ls -latrh && tar czvf cinc_server_exporter.tar.gz cinc_server_exporter
      - run: gh release create -R esoterick/cinc_server_exporter -F RELEASE.md "$CIRCLE_TAG" ./target/release/cinc_server_exporter.tar.gz
  build:
    docker:
      - image: ubuntu:bionic-20210930
    steps:
      - checkout
      - restore_cache:
          key: cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.lock" }}
      - run: apt update && apt install -y curl build-essential
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup.sh && chmod +x rustup.sh && ./rustup.sh -y
      - run:
          name: Setup Environment Variables
          command: |
            echo 'source "$HOME/.cargo/env"' >> "$BASH_ENV"
      - run:
          name: Install tools
          command: |
            rustup update
            rustup install nightly
            rustup install stable
            rustup default nightly
            rustup component add rustfmt
      - run:
          name: Check formatting
          command: |
            rustfmt --version
            cargo fmt
      # - run:
      #     name: Nightly Build
      #     command: |
      #       rustup run nightly rustc --version --verbose
      #       rustup run nightly cargo --version --verbose
      #       rustup run nightly cargo build
      - run:
          name: Stable Build
          command: |
            rustup run stable rustc --version --verbose
            rustup run stable cargo --version --verbose
            rustup run stable cargo build  --release
      - run:
          name: Test
          command: rustup run stable cargo test
      - save_cache:
          key: cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"

workflows:
  release-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - release:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
